#pragma checksum "C:\Users\pervi\Desktop\New folder\SWPO\ArtStudio\Views\Shared\_AdminLeyaout.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b8921c910ebd3b22628160d7bedac297623c828f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__AdminLeyaout), @"mvc.1.0.view", @"/Views/Shared/_AdminLeyaout.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b8921c910ebd3b22628160d7bedac297623c828f", @"/Views/Shared/_AdminLeyaout.cshtml")]
    public class Views_Shared__AdminLeyaout : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "photos", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("mud-nav-link"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "categories", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "packages", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("<!DOCTYPE html>\r\n<html lang=\"ru\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b8921c910ebd3b22628160d7bedac297623c828f4840", async() => {
                WriteLiteral(@"
    <meta charset=""utf-8"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
    <title>ArtStudio</title>
    <base href=""/"" />
    <link rel=""stylesheet"" href=""css/bootstrap/bootstrap.min.css"" />
    <link href=""css/site.css"" rel=""stylesheet"" />

    <link href=""fonts/Gilroy/font.css"" rel=""stylesheet"" />
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b8921c910ebd3b22628160d7bedac297623c828f6169", async() => {
                WriteLiteral(@"
    <app>
        <!--Blazor:{""sequence"":0,""type"":""server"",""prerenderId"":""5b4de2d832e84673b26c4eadf738322e"",""descriptor"":""CfDJ8FzCDViDvUlFsmg0wvXLKAwHqmh1J05hMA77LqWAbPoUaLvdY3AU0xw39E2\u002BYGnR/ZTw\u002B0Y6VhIiBGBcDZbZrz6uOGLEw92M4UDftv3y5shiU9/a0C9ujGKUaMix\u002BR8tYlXQCR1U9yg9VBy7OtakOcOdDpJoYDVg3HovsGwuy3EBOurzdsOF8jrwWp1B5IbGcj/s\u002B24E2emuqvIvTBhG5HrofzNkqyES66xG37VUVfs/IhH8qoUqXIQR4Hh3vJX3101TAmLSharL3EHTQMU1/oPi6mJymtY6fMhtWuYgPzKLfzuaBfAsu3ykhPTeM0NX7o9aNwxIHO4cgCOpu3xrkNGH/O/AFSPnL\u002B5UpoKUTQs3""}-->

        <div class=""mud-layout leyaout"">
            <header class=""mud-appbar mud-appbar-dense mud-appbar-fixed mud-elevation-1"">
                <div class=""mud-toolbar mud-toolbar-dense mud-toolbar-gutters mud-toolbar-appbar"">

                    <div");
                BeginWriteAttribute("class", " class=\"", 1244, "\"", 1252, 0);
                EndWriteAttribute();
                WriteLiteral(@"><span class=""header_brand"">Админ панель</span></div>
                    <div class=""flex-grow-1""></div>
                    <div class=""ml-auto d-flex"" style=""align-items:center"">
                        <div class=""flex-grow-1""></div>
                        <div class=""d-flex justify-content-center align-items-center"">
                            <a href=""/"" class=""shine-button "">Вернуться на главную</a>
                        </div>
                        <div class=""flex-grow-1""></div>
                    </div>
                </div>
            </header>
            <aside style=""left:0; top:48px; width:205px;"" class=""mud-drawer mud-drawer-fixed mud-drawer-anchor-left mud-drawer--closed mud-drawer--initial mud-drawer-md mud-drawer-clipped-never mud-elevation-1 mud-drawer-responsive sidebar-bg"">
                <div class=""mud-drawer-content"">
                    <div class=""mud-navmenu"" style=""color:white; font-family:Gilroy"">
                        <div class=""mud-nav-item mud-ripple");
                WriteLiteral("\">\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b8921c910ebd3b22628160d7bedac297623c828f8508", async() => {
                    WriteLiteral("\r\n                                <div Class=\"mud-nav-link-text\">\r\n                                    Фото\r\n                                </div>\r\n                            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mud-navmenu\" style=\"color:white; font-family:Gilroy\">\r\n                        <div class=\"mud-nav-item mud-ripple\">\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b8921c910ebd3b22628160d7bedac297623c828f10548", async() => {
                    WriteLiteral("\r\n                                <div Class=\"mud-nav-link-text\">\r\n                                    Категории\r\n                                </div>\r\n                            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"mud-navmenu\" style=\"color:white; font-family:Gilroy\">\r\n                        <div class=\"mud-nav-item mud-ripple\">\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b8921c910ebd3b22628160d7bedac297623c828f12594", async() => {
                    WriteLiteral("\r\n                                <div Class=\"mud-nav-link-text\">\r\n                                    Пакеты\r\n                                </div>\r\n                            ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </aside>\r\n\r\n            <div style=\"position:absolute; padding:90px; width:calc(100% - 205px); left:205px;\" class=\"mud-main-content\">\r\n                ");
#nullable restore
#line 67 "C:\Users\pervi\Desktop\New folder\SWPO\ArtStudio\Views\Shared\_AdminLeyaout.cshtml"
           Write(RenderBody());

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
            </div>
        </div>
        <style>
            .mud-chart-serie:hover {
                filter: url(#lighten);
            }
        </style>

        <style>
            :root {
                --mud-palette-black: #000000;
                --mud-palette-white: #FFFFFF;
                --mud-palette-primary: #9184EF;
                --mud-palette-primary-rgb: 145,132,239;
                --mud-palette-primary-text: #ffffff;
                --mud-palette-primary-darken: rgb(115,98,235);
                --mud-palette-primary-lighten: rgb(175,166,243);
                --mud-palette-primary-hover: rgba(145,132,239, 0.06);
                --mud-palette-secondary: #4A5665;
                --mud-palette-secondary-rgb: 74,86,101;
                --mud-palette-secondary-text: rgba(255, 255, 255, 0.7);
                --mud-palette-secondary-darken: rgb(58,67,79);
                --mud-palette-secondary-lighten: rgb(90,105,123);
                --mud-palette-secondary-hover: rgba");
                WriteLiteral(@"(74,86,101, 0.06);
                --mud-palette-tertiary: #1EC8A5;
                --mud-palette-tertiary-rgb: 30,200,165;
                --mud-palette-tertiary-text: #FFFFFF;
                --mud-palette-tertiary-darken: rgb(25,167,138);
                --mud-palette-tertiary-lighten: rgb(45,223,187);
                --mud-palette-tertiary-hover: rgba(30,200,165, 0.06);
                --mud-palette-info: #2196F3;
                --mud-palette-info-text: #FFFFFF;
                --mud-palette-info-darken: rgb(12,131,226);
                --mud-palette-info-lighten: rgb(69,167,245);
                --mud-palette-info-hover: rgba(33,150,243, 0.06);
                --mud-palette-success: #00C853;
                --mud-palette-success-text: #FFFFFF;
                --mud-palette-success-darken: rgb(0,162,67);
                --mud-palette-success-lighten: rgb(0,238,99);
                --mud-palette-success-hover: rgba(0,200,83, 0.06);
                --mud-palette-warning: #FF9800;
        ");
                WriteLiteral(@"        --mud-palette-warning-text: #FFFFFF;
                --mud-palette-warning-darken: rgb(217,129,0);
                --mud-palette-warning-lighten: rgb(255,167,38);
                --mud-palette-warning-hover: rgba(255,152,0, 0.06);
                --mud-palette-error: #F44336;
                --mud-palette-error-text: #FFFFFF;
                --mud-palette-error-darken: rgb(242,33,18);
                --mud-palette-error-lighten: rgb(246,101,90);
                --mud-palette-error-hover: rgba(244,67,54, 0.06);
                --mud-palette-dark: #424242;
                --mud-palette-dark-text: #FFFFFF;
                --mud-palette-dark-darken: rgb(47,47,47);
                --mud-palette-dark-lighten: rgb(85,85,85);
                --mud-palette-dark-hover: rgba(66,66,66, 0.06);
                --mud-palette-text-primary: #ffffff;
                --mud-palette-text-secondary: rgba(0,0,0, 0.54);
                --mud-palette-text-disabled: rgba(0,0,0, 0.38);
                --mud-pal");
                WriteLiteral(@"ette-action-default: rgba(0,0,0, 0.54);
                --mud-palette-action-default-hover: rgba(0,0,0, 0.06);
                --mud-palette-action-disabled: rgba(0,0,0, 0.26);
                --mud-palette-action-disabled-background: rgba(0,0,0, 0.12);
                --mud-palette-surface: #FFFFFF;
                --mud-palette-background: #FFFFFF;
                --mud-palette-background-grey: #F5F5F5;
                --mud-palette-drawer-background: #21272F;
                --mud-palette-drawer-text: #424242;
                --mud-palette-drawer-icon: #616161;
                --mud-palette-appbar-background: #21272F;
                --mud-palette-appbar-text: #FFFFFF;
                --mud-palette-lines-default: rgba(0,0,0, 0.12);
                --mud-palette-lines-inputs: #BDBDBD;
                --mud-palette-table-lines: rgba(224,224,224, 1);
                --mud-palette-table-striped: rgba(0,0,0, 0.02);
                --mud-palette-table-hover: rgba(0,0,0, 0.04);
                --");
                WriteLiteral(@"mud-palette-divider: #ffffff;
                --mud-palette-divider-light: rgba(0,0,0, 0.8);
                --mud-palette-grey-default: #9E9E9E;
                --mud-palette-grey-light: #BDBDBD;
                --mud-palette-grey-lighter: #E0E0E0;
                --mud-palette-grey-dark: #757575;
                --mud-palette-grey-darker: #616161;
                --mud-palette-overlay-dark: rgba(33,33,33, 0.5);
                --mud-palette-overlay-light: rgba(255,255,255, 0.5);
                --mud-elevation-0: none;
                --mud-elevation-1: 0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12);
                --mud-elevation-2: 0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12);
                --mud-elevation-3: 0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12);
                --mud-elevation-4: 0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px");
                WriteLiteral(@" 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12);
                --mud-elevation-5: 0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12);
                --mud-elevation-6: 0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12);
                --mud-elevation-7: 0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12);
                --mud-elevation-8: 0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12);
                --mud-elevation-9: 0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12);
                --mud-elevation-10: 0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12);
                --mud-elevation-11: 0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)");
                WriteLiteral(@";
                --mud-elevation-12: 0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12);
                --mud-elevation-13: 0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12);
                --mud-elevation-14: 0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12);
                --mud-elevation-15: 0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12);
                --mud-elevation-16: 0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12);
                --mud-elevation-17: 0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12);
                --mud-elevation-18: 0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12);
                --mud-elevation-19: 0p");
                WriteLiteral(@"x 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12);
                --mud-elevation-20: 0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12);
                --mud-elevation-21: 0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12);
                --mud-elevation-22: 0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12);
                --mud-elevation-23: 0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12);
                --mud-elevation-24: 0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12);
                --mud-elevation-25: 0 5px 5px -3px rgba(0,0,0,.06), 0 8px 10px 1px rgba(0,0,0,.042), 0 3px 14px 2px rgba(0,0,0,.036);
                --mud-default-borderradius: 4px;
                --mud-draw");
                WriteLiteral(@"er-width-left: 260px;
                --mud-drawer-width-right: 300px;
                --mud-appbar-min-height: 0;
                --mud-typography-default-family: 'Roboto','Helvetica','Arial','sans-serif';
                --mud-typography-default-size: .875rem;
                --mud-typography-default-weight: 400;
                --mud-typography-default-lineheight: 1.43;
                --mud-typography-default-letterspacing: .01071em;
                --mud-typography-h1-family: 'Roboto','Helvetica','Arial','sans-serif';
                --mud-typography-h1-size: 6rem;
                --mud-typography-h1-weight: 300;
                --mud-typography-h1-lineheight: 1.167;
                --mud-typography-h1-letterspacing: -.01562em;
                --mud-typography-h2-family: 'Roboto','Helvetica','Arial','sans-serif';
                --mud-typography-h2-size: 3.75rem;
                --mud-typography-h2-weight: 300;
                --mud-typography-h2-lineheight: 1.2;
                --mud-ty");
                WriteLiteral(@"pography-h2-letterspacing: -.00833em;
                --mud-typography-h3-family: 'Roboto','Helvetica','Arial','sans-serif';
                --mud-typography-h3-size: 3rem;
                --mud-typography-h3-weight: 400;
                --mud-typography-h3-lineheight: 1.167;
                --mud-typography-h3-letterspacing: 0;
                --mud-typography-h4-family: 'Roboto','Helvetica','Arial','sans-serif';
                --mud-typography-h4-size: 2.125rem;
                --mud-typography-h4-weight: 400;
                --mud-typography-h4-lineheight: 1.235;
                --mud-typography-h4-letterspacing: .00735em;
                --mud-typography-h5-family: 'Roboto','Helvetica','Arial','sans-serif';
                --mud-typography-h5-size: 1.5rem;
                --mud-typography-h5-weight: 400;
                --mud-typography-h5-lineheight: 1.334;
                --mud-typography-h5-letterspacing: 0;
                --mud-typography-h6-family: 'Roboto','Helvetica','Arial','sans");
                WriteLiteral(@"-serif';
                --mud-typography-h6-size: 1.25rem;
                --mud-typography-h6-weight: 500;
                --mud-typography-h6-lineheight: 1.6;
                --mud-typography-h6-letterspacing: .0075em;
                --mud-typography-subtitle1-family: 'Roboto','Helvetica','Arial','sans-serif';
                --mud-typography-subtitle1-size: 1rem;
                --mud-typography-subtitle1-weight: 400;
                --mud-typography-subtitle1-lineheight: 1.75;
                --mud-typography-subtitle1-letterspacing: .00938em;
                --mud-typography-subtitle2-family: 'Roboto','Helvetica','Arial','sans-serif';
                --mud-typography-subtitle2-size: .875rem;
                --mud-typography-subtitle2-weight: 500;
                --mud-typography-subtitle2-lineheight: 1.57;
                --mud-typography-subtitle2-letterspacing: .00714em;
                --mud-typography-body1-family: 'Roboto','Helvetica','Arial','sans-serif';
                --mud-typ");
                WriteLiteral(@"ography-body1-size: 1rem;
                --mud-typography-body1-weight: 400;
                --mud-typography-body1-lineheight: 1.5;
                --mud-typography-body1-letterspacing: .00938em;
                --mud-typography-body2-family: 'Roboto','Helvetica','Arial','sans-serif';
                --mud-typography-body2-size: .875rem;
                --mud-typography-body2-weight: 400;
                --mud-typography-body2-lineheight: 1.43;
                --mud-typography-body2-letterspacing: .01071em;
                --mud-typography-button-family: 'Roboto','Helvetica','Arial','sans-serif';
                --mud-typography-button-size: .875rem;
                --mud-typography-button-weight: 500;
                --mud-typography-button-lineheight: 1.75;
                --mud-typography-button-letterspacing: .02857em;
                --mud-typography-caption-family: 'Roboto','Helvetica','Arial','sans-serif';
                --mud-typography-caption-size: .75rem;
                --mud-ty");
                WriteLiteral(@"pography-caption-weight: 400;
                --mud-typography-caption-lineheight: 1.66;
                --mud-typography-caption-letterspacing: .03333em;
                --mud-typography-overline-family: 'Roboto','Helvetica','Arial','sans-serif';
                --mud-typography-overline-size: .75rem;
                --mud-typography-overline-weight: 400;
                --mud-typography-overline-lineheight: 2.66;
                --mud-typography-overline-letterspacing: .08333em;
                --mud-zindex-drawer: 1100;
                --mud-zindex-appbar: 1200;
                --mud-zindex-dialog: 1300;
                --mud-zindex-popover: 1400;
                --mud-zindex-snackbar: 1500;
                --mud-zindex-tooltip: 1600;
            }
        </style>





        <div id=""mud-snackbar-container"" class=""mud-snackbar-location-top-right"">
        </div>

        <!--Blazor:{""prerenderId"":""5b4de2d832e84673b26c4eadf738322e""}-->
    </app>

    <div id=""blazor-error-ui"">");
                WriteLiteral("\r\n\r\n\r\n        An unhandled exception has occurred. See browser dev tools for details.\r\n\r\n        <a");
                BeginWriteAttribute("href", " href=\"", 17240, "\"", 17247, 0);
                EndWriteAttribute();
                WriteLiteral(@" class=""reload"">Reload</a>
        <a class=""dismiss"">🗙</a>
    </div>


    <script src=""/js/identity.js""></script>
    <link href=""https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap"" rel=""stylesheet"" />
    <link href=""_content/MudBlazor/MudBlazor.min.css"" rel=""stylesheet"" />
    <script src=""_content/MudBlazor/MudBlazor.min.js""></script>
    <script src=""/js/jquery-min.js""></script>


    <script src=""js/main-login.js""></script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
