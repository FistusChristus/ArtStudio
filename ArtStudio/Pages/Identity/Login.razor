@page "/login"

@using ArtStudio.Models
@using ArtStudio.Services
@using Microsoft.AspNetCore.Mvc

@inject NavigationManager NavigationManager
@inject JSRuntimeService JSRuntimeService
@inject IJSRuntime JS
<link rel="icon" type="image/png" href="images/icons/favicon.ico" />
<!--===============================================================================================-->
<link rel="stylesheet" type="text/css" href="vendor/bootstrap/css/bootstrap.min.css">
<!--===============================================================================================-->
<link rel="stylesheet" type="text/css" href="fonts/font-awesome-4.7.0/css/font-awesome.min.css">
<!--===============================================================================================-->
<link rel="stylesheet" type="text/css" href="fonts/iconic/css/material-design-iconic-font.min.css">
<!--===============================================================================================-->
<link rel="stylesheet" type="text/css" href="vendor/animate/animate.css">
<!--===============================================================================================-->
<link rel="stylesheet" type="text/css" href="vendor/css-hamburgers/hamburgers.min.css">
<!--===============================================================================================-->
<link rel="stylesheet" type="text/css" href="vendor/animsition/css/animsition.min.css">
<!--===============================================================================================-->
<link rel="stylesheet" type="text/css" href="vendor/select2/select2.min.css">
<!--===============================================================================================-->
<link rel="stylesheet" type="text/css" href="vendor/daterangepicker/daterangepicker.css">
<!--===============================================================================================-->
<link rel="stylesheet" type="text/css" href="css/util.css">
<link rel="stylesheet" type="text/css" href="css/main.css">
<!--===============================================================================================-->
<div class="identity_bg ">
</div>
<div class="d-flex ca-d-center mt-2 pos-relative" style="width:100%; ">
    <div>
        <div class="wrap-login100">
            <div class="login100-form validate-form">
                <span class="login100-form-logo">
                    <i class="zmdi zmdi-landscape"></i>
                </span>

                <span class="login100-form-title p-b-34 p-t-27">
                    Вход
                </span>
                @if (!String.IsNullOrEmpty(Errors))
                {
                    <div class="wrap-input100">
                        <span class="text-warning">@Errors</span>
                    </div>
                }

                <div class="wrap-input100 validate-input" data-validate="Введите Email">
                    <input class="input100" type="text" name="email" @bind-value="loginModel.Email" placeholder="Email">
                    <span class="focus-input100" data-placeholder="&#xf207;"></span>
                </div>

                <div class="wrap-input100 validate-input" data-validate="Введите пароль">
                    <input class="input100" type="password" @bind-value="loginModel.Password" name="password" placeholder="Пароль">
                    <span class="focus-input100" data-placeholder="&#xf191;"></span>
                </div>

                <div class="contact100-form-checkbox">
                    <input class="input-checkbox100" id="ckb1" type="checkbox" name="remember-me">
                    <label class="label-checkbox100" for="ckb1">
                        Запомнить меня
                    </label>
                </div>

                <div class="container-login100-form-btn">
                    <button @onclick="LoginRequest" class="login100-form-btn">
                        Войти
                    </button>
                </div>


            </div>
        </div>
    </div>
</div>

<div id="dropDownSelect1"></div>

<!--===============================================================================================-->


@code{

    public string Errors = String.Empty;
    public LoginModel loginModel = new LoginModel() { Email = "kashperuk99@gmail.com", Password = "!Q2w3e4r5t" };

    public async void LoginRequest()
    {
        Errors = "";
        if (!String.IsNullOrEmpty(loginModel.Email) && !String.IsNullOrEmpty(loginModel.Password))
        {
            Response result = await JSRuntimeService.InvokeScript("SendRequest", new { type = "post", url = "/api/user/login", data = loginModel, contentType = "application/json" });

            if (result.IsSuccess)
            {
                NavigationManager.NavigateTo("/", true);
            }
            else
            {
                Errors = result.Errors;
            }
            this.StateHasChanged();
        }
        else
            Errors = "Не заполнены все поля";
    }

}
